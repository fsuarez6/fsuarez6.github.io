I"Ï<p><strong>Last update:</strong> May 23rd, 2017</p>

<p>These instructions are for installing OpenRAVE in Ubuntu 14.04 (Trusty). For the official 
documentation of OpenRAVE, please refer to http://openrave.org.</p>

<p>From my experience, the best way to install OpenRAVE is to build it from source.</p>

<h2 id="dependencies">Dependencies</h2>

<p>You need to install the following programs:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">sudo </span>apt-get <span class="nb">install </span>cmake g++ git ipython octave python-dev python-h5py python-numpy <span class="se">\</span>
python-pip python-scipy python-sympy qt4-dev-tools zlib-bin</code></pre></figure>

<p>Next, you will need to install the following libraries, which are available from the 
Ubuntu package repository:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">sudo </span>apt-get <span class="nb">install </span>libassimp-dev libavcodec-dev libavformat-dev libavformat-dev     <span class="se">\</span>
libboost-all-dev libboost-date-time-dev libbullet-dev libfaac-dev libfreetype6-dev    <span class="se">\</span>
libglew-dev  libgsm1-dev liblapack-dev libmpfi-dev libmpfr-dev libode-dev libogg-dev  <span class="se">\</span>
libpcre3-dev libpcrecpp0 libqhull-dev libqt4-dev libsoqt-dev-common libsoqt4-dev      <span class="se">\</span>
libswscale-dev libswscale-dev libvorbis-dev libx264-dev libxml2-dev libxvidcore-dev</code></pre></figure>

<p>Now, get the <code class="highlighter-rouge">collada-dom-dev</code> package. If you are installing OpenRAVE is very likely that 
you have already installed ROS Indigo. 
In that case, you can install <code class="highlighter-rouge">collada-dom-dev</code> directly:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">sudo </span>apt-get update
<span class="nb">sudo </span>apt-get <span class="nb">install </span>collada-dom-dev</code></pre></figure>

<p>If you are not planning to use ROS, install <code class="highlighter-rouge">collada-dom-dev</code> from the OpenRAVE PPA:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">sudo </span>add-apt-repository ppa:openrave/release
<span class="nb">sudo </span>sh <span class="nt">-c</span> <span class="s1">'echo "deb-src http://ppa.launchpad.net/openrave/release/ubuntu `lsb_release -cs` main" &gt;&gt; /etc/apt/sources.list.d/openrave-release-`lsb_release -cs`.list'</span>
<span class="nb">sudo </span>apt-get update
<span class="nb">sudo </span>apt-get <span class="nb">install </span>collada-dom-dev</code></pre></figure>

<h3 id="openscenegraph">OpenSceneGraph</h3>
<p>OpenRAVE requires OpenSceneGraph 3.4, so we have to build it from source:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">cd</span> ~/git
git clone https://github.com/openscenegraph/OpenSceneGraph.git <span class="nt">--branch</span> OpenSceneGraph-3.4
<span class="nb">cd </span>OpenSceneGraph
<span class="nb">mkdir </span>build<span class="p">;</span> <span class="nb">cd </span>build
cmake .. <span class="nt">-DDESIRED_QT_VERSION</span><span class="o">=</span>4
make <span class="nt">-j</span> <span class="sb">`</span><span class="nb">nproc</span><span class="sb">`</span>
<span class="nb">sudo </span>make <span class="nb">install</span></code></pre></figure>

<h3 id="fcl---the-flexible-collision-library">FCL - The Flexible Collision Library</h3>
<p>Install <code class="highlighter-rouge">libccd</code>:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">sudo </span>apt-add-repository ppa:imnmfotmal/libccd
<span class="nb">sudo </span>apt-get update
<span class="nb">sudo </span>apt-get <span class="nb">install </span>libccd</code></pre></figure>

<p>Build and install <code class="highlighter-rouge">fcl</code> version 0.5.0:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">cd</span> ~/git
git clone https://github.com/flexible-collision-library/fcl
<span class="nb">cd </span>fcl<span class="p">;</span> git reset <span class="nt">--hard</span> 0.5.0
<span class="nb">mkdir </span>build<span class="p">;</span> <span class="nb">cd </span>build
cmake ..
make <span class="nt">-j</span> <span class="sb">`</span><span class="nb">nproc</span><span class="sb">`</span>
<span class="nb">sudo </span>make <span class="nb">install</span></code></pre></figure>

<h2 id="sympy-version"><code class="highlighter-rouge">sympy</code> Version</h2>
<p>Downgrade sympy so that IKFast works properly:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">pip <span class="nb">install</span> <span class="nt">--upgrade</span> <span class="nt">--user</span> <span class="nv">sympy</span><span class="o">==</span>0.7.1</code></pre></figure>

<h2 id="building-from-source">Building from Source</h2>

<p>Now you can build and install <code class="highlighter-rouge">OpenRAVE</code> (Tested with commit 81ec501):</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">cd</span> ~/git
git clone https://github.com/rdiankov/openrave.git
<span class="nb">cd </span>openrave<span class="p">;</span> git reset <span class="nt">--hard</span> 81ec501
<span class="nb">mkdir </span>build<span class="p">;</span> <span class="nb">cd </span>build
cmake <span class="nt">-DODE_USE_MULTITHREAD</span><span class="o">=</span>ON <span class="nt">-DOSG_DIR</span><span class="o">=</span>/usr/local/lib64/ ..
make <span class="nt">-j</span> <span class="sb">`</span><span class="nb">nproc</span><span class="sb">`</span>
<span class="nb">sudo </span>make <span class="nb">install</span></code></pre></figure>

<h2 id="testing-the-installation">Testing the Installation</h2>
<p>You can check that your installation works by running one of the 
<a href="http://openrave.org/docs/latest_stable/examples/">default examples</a>. For example:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">openrave.py <span class="nt">--example</span> graspplanning</code></pre></figure>

<p>It should start the <code class="highlighter-rouge">graspplanning</code> example:</p>
<figure style="text-align: center;">
  <img src="/images/graspplanning.png" />
  <figcaption>OpenRAVE example</figcaption>
</figure>

<p>You may see some messages printed in yellow on your command line but they are 
just warnings that wonâ€™t prevent your installation from working.</p>
:ET